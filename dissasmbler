
bin/ft_read.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <ft_read>:
   0:	48 31 c0             	xor    %rax,%rax
   3:	b8 03 00 00 00       	mov    $0x3,%eax
   8:	0f 05                	syscall 
   a:	48 83 f8 00          	cmp    $0x0,%rax
   e:	7c 02                	jl     12 <error>
  10:	eb 12                	jmp    24 <done>

0000000000000012 <error>:
  12:	48 f7 d8             	neg    %rax
  15:	48 89 c7             	mov    %rax,%rdi
  18:	e8 00 00 00 00       	call   1d <error+0xb>
  1d:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax

0000000000000024 <done>:
  24:	c3                   	ret    

bin/ft_strcmp.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <ft_strcmp>:
   0:	48 31 c0             	xor    %rax,%rax
   3:	48 31 d2             	xor    %rdx,%rdx
   6:	eb 09                	jmp    11 <compare>

0000000000000008 <increment>:
   8:	80 3c 17 00          	cmpb   $0x0,(%rdi,%rdx,1)
   c:	74 1f                	je     2d <done>
   e:	48 ff c2             	inc    %rdx

0000000000000011 <compare>:
  11:	8a 14 16             	mov    (%rsi,%rdx,1),%dl
  14:	38 14 17             	cmp    %dl,(%rdi,%rdx,1)
  17:	7f 04                	jg     1d <greater>
  19:	7c 09                	jl     24 <lower>
  1b:	eb eb                	jmp    8 <increment>

000000000000001d <greater>:
  1d:	b8 01 00 00 00       	mov    $0x1,%eax
  22:	eb 09                	jmp    2d <done>

0000000000000024 <lower>:
  24:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  2b:	eb 00                	jmp    2d <done>

000000000000002d <done>:
  2d:	c3                   	ret    

bin/ft_strcpy.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <ft_strcpy>:
   0:	48 31 c0             	xor    %rax,%rax
   3:	eb 03                	jmp    8 <copy>

0000000000000005 <increment>:
   5:	48 ff c0             	inc    %rax

0000000000000008 <copy>:
   8:	8a 14 07             	mov    (%rdi,%rax,1),%dl
   b:	88 14 06             	mov    %dl,(%rsi,%rax,1)
   e:	80 3c 07 00          	cmpb   $0x0,(%rdi,%rax,1)
  12:	75 f1                	jne    5 <increment>

0000000000000014 <done>:
  14:	48 89 f0             	mov    %rsi,%rax
  17:	c3                   	ret    

bin/ft_strdup.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <ft_strdup>:
   0:	48 31 c0             	xor    %rax,%rax
   3:	e8 00 00 00 00       	call   8 <ft_strdup+0x8>
   8:	57                   	push   %rdi
   9:	48 89 c7             	mov    %rax,%rdi
   c:	48 ff c7             	inc    %rdi
   f:	e8 00 00 00 00       	call   14 <ft_strdup+0x14>
  14:	48 83 f8 00          	cmp    $0x0,%rax
  18:	7e 0b                	jle    25 <error>
  1a:	48 89 c6             	mov    %rax,%rsi
  1d:	5f                   	pop    %rdi
  1e:	e8 00 00 00 00       	call   23 <ft_strdup+0x23>
  23:	eb 0b                	jmp    30 <done>

0000000000000025 <error>:
  25:	48 f7 d8             	neg    %rax
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	call   30 <done>

0000000000000030 <done>:
  30:	c3                   	ret    

bin/ft_strlen.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <ft_strlen>:
   0:	48 31 c0             	xor    %rax,%rax
   3:	eb 03                	jmp    8 <compare>

0000000000000005 <increment>:
   5:	48 ff c0             	inc    %rax

0000000000000008 <compare>:
   8:	80 3c 07 00          	cmpb   $0x0,(%rdi,%rax,1)
   c:	75 f7                	jne    5 <increment>

000000000000000e <done>:
   e:	c3                   	ret    

bin/ft_write.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <ft_write>:
   0:	48 31 c0             	xor    %rax,%rax
   3:	b8 04 00 00 00       	mov    $0x4,%eax
   8:	0f 05                	syscall 
   a:	48 83 f8 00          	cmp    $0x0,%rax
   e:	7c 02                	jl     12 <error>
  10:	eb 12                	jmp    24 <done>

0000000000000012 <error>:
  12:	48 f7 d8             	neg    %rax
  15:	48 89 c7             	mov    %rax,%rdi
  18:	e8 00 00 00 00       	call   1d <error+0xb>
  1d:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax

0000000000000024 <done>:
  24:	c3                   	ret    
